#Version 0.21.1
#Counter: 5
#WinCounter: 1
#Window 1
#TabInfo
TabText: Layer 0
TabRenamed: 0
TabNumber: 0
TabsetLayer: 0
#Control: Window1
X       : 0
Y       : 0
CX      : 625
CY      : 521
ControlLayer: 0
Title   : Font creator
Class   : Window
Enabled : 0
Checked : 0
Parent  : 
PClass  : 
SeqParentName  : 
SeqParentClass  : 
SeqChildName  : 
Visible : 1
BkColor : 0
SystemBkColor : BTNFACE
EnableC : 1
Style   : 0
TypStyle: 
ExStyle : 0
Local : 1
LastEditorEvent : 1

#Proc: (General)
include w32dcore.ew

sequence dib


function left_bbox(integer x, integer y,integer width,integer height)

sequence temp
integer small
temp={}
small=width+1

  for i=y to y+height do
     for j=x to x+width do
       if equal(getDibPixel(dib, j, i),{255,0,255})!=1 then
         temp=append(temp,j)
         exit
       end if
     end for
  end for
  if length(temp)>0 then
   for i=1 to length(temp) do
     if temp[i]<small then
       small=temp[i]
     end if
   end for
   return small
  else
   return 0
  end if
end function


function right_bbox(integer x, integer y,integer width,integer height)

sequence temp
integer small
temp={}
small=width+1

  for i=y to y+height do
     for j=x+width to x by -1 do
       if equal(getDibPixel(dib, j, i),{255,0,255})!=1 then
         temp=append(temp,j)
         exit
       end if
     end for
  end for
  if length(temp)>0 then
   for i=1 to length(temp) do
     if temp[i]>small then
       small=temp[i]
     end if
   end for
   return small
  else
   return 0
  end if
end function


#EndProc

#Proc: onPaint
procedure Window1_onPaint (integer self, integer event, sequence params)--params is ( int x1, int y1, int x2, int y2 )
  copyBlt(Window1,0,0,Pixmap1)
end procedure
setHandler( Window1, w32HPaint, routine_id("Window1_onPaint"))
#EndProc

#Control: Pixmap1
AWindow : 30
X       : 10
Y       : 10
CX      : 100
CY      : 50
ControlLayer: 0
Title   : 
Class   : Pixmap
Enabled : 0
Checked : 0
Parent  : 
PClass  : 
SeqParentName  : 
SeqParentClass  : 
SeqChildName  : 
Visible : 1
EnableC : 1
Style   : 
TypStyle: 
ExStyle : 0
TabOrder : 1
Local : 1
OrigTitle : Bitmap2

#Control: PushButton3
AWindow : 30
X       : 10
Y       : 430
CX      : 90
CY      : 30
ControlLayer: 0
Title   : Get Font
Class   : PushButton
Enabled : 0
Checked : 0
Parent  : 
PClass  : 
SeqParentName  : 
SeqParentClass  : 
SeqChildName  : 
Visible : 1
EnableC : 1
Style   : 
TypStyle: 
ExStyle : 0
TabOrder : 2
Local : 1
LastEditorEvent : 3
OrigTitle : PushButton3

#Proc: onClick
procedure PushButton3_onClick (integer self, integer event, sequence params)--params is ()
  integer flags, points
  atom color
  sequence font,size
  object result
  sequence list1,font_width
  integer x,y,width,height
  integer real_width,real_height
  integer count,fn
  x=0
  y=0
  width=0
  height=0
  list1={}
  size={}
  real_width=0
  real_height=0
  font_width={}
  for i=32 to 126 do
  	list1&=i
  	font_width&=0
  end for

  result = getFontDialog( Window1 )
  if sequence( result ) then

    size=getCtlSize(Window1)
    setCtlSize(Pixmap1, 4096,4096 )
    setPenColor(Pixmap1,rgb(255,0,255))
    drawRectangle(Pixmap1,1,0,0,4096,4096)

    font = result[1]
    points = result[2]
    flags  = result[3]
    color  = result[4]
    setFont( Pixmap1, font, points, flags )
    setTextColor( Pixmap1 , color )--rgb(255,0,255)
    setPenPos( Pixmap1, 0, 0 )

    width=getTextWidth ( Pixmap1, "W" )
    ?width
    height=getTextHeight (Pixmap1, "W" )
    ?height
    setTextColor(Pixmap1,color)

    count=0
    for i=32 to 126 do
      font_width[i-31]=getTextWidth ( Pixmap1, {list1[i-31]} )
      --?font_width[i-31]
      if font_width[i-31]=0 then
      	font_width[i-31]=width
      end if
      setPenPos( Pixmap1, x, y )
      wPuts( Pixmap1, {list1[i-31]} )
      x+=width
      count+=1
      if count>10 then
      	y+=height
      	x=0
      	count=0
      end if
    end for
    --?count
    x=0
    y=0
    for i=32 to 126 do
      x+=width
    end for
    real_width=x
    real_height=height
    setCtlSize(Pixmap1, (width)*11,height*(95/10))

    dib = newDib((width)*11,height*floor(95/10))

    repaintWindow(Window1)
    setText(text_font,font&"  "&sprint(real_width)&"   "&sprint(real_height))

    copyToDib(dib, Pixmap1, 0, 0, 0, 0, (width)*11,height*floor(95/10))


    result = saveDib(dib, "bitmap2.bmp", 0, 0, (width)*11,height*floor(95/10))

    fn=open("font.txt","w")
    puts(fn,sprint(width)&"\n")
    puts(fn,sprint(height)&"\n")
    for i=32 to 126 do

      puts(fn,sprint(font_width[i-31])&"\n")

    end for
    close(fn)
  end if


end procedure
setHandler( PushButton3, w32HClick, routine_id("PushButton3_onClick"))
#EndProc

#Control: text_font
AWindow : 30
X       : 110
Y       : 430
CX      : 180
CY      : 30
ControlLayer: 0
Title   : Font
Class   : LText
Enabled : 0
Checked : 0
Parent  : 
PClass  : 
SeqParentName  : 
SeqParentClass  : 
SeqChildName  : 
Visible : 1
EnableC : 1
Style   : 
TypStyle: 
ExStyle : 0
TabOrder : 3
Local : 1
OrigTitle : LText4

